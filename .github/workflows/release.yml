name: Build & Publish Image

on:
  push:
    tags:
      - 'jupyterlab-mlops-*.*.*'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      - name: Set env
        run: |
          TAG_NAME=${GITHUB_REF#refs/*/}
          IMAGE_NAME=`echo $TAG_NAME | sed -e's/\(.*\)-\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\)\+/\1/'`
          IMAGE_VERSION=`echo $TAG_NAME | sed -e's/\(.*\)-\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\)\+/\2/'`
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "IMAGE_VERSION=$IMAGE_VERSION" >> $GITHUB_ENV

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx

      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.PUBLIC_GCR_DEPLOY_SA_KEY }}

      - name: Build jupyterlab-mlops
        uses: docker/build-push-action@v2
        with:
          context: jupyterlab-mlops
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: gcr.io/getindata-images-public/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }},gcr.io/getindata-images-public/${{ env.IMAGE_NAME }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
